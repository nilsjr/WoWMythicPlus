[versions]
kotlin = "1.8.10"
coroutines = "1.6.4"
jetbrainsCompose = "1.4.0"
composeCompiler = "1.4.3"
gradleVersionsPlugin = "0.46.0"
ktor = "2.3.0"
serialization = "1.5.0"
detekt = "1.22.0"
html = "0.7.3"
buildKonfig = "4.0.2"
ftpUpload = "0.4.0"

[libraries]
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.4.0"
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ktorClientCio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktorClientContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktorClientCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorClientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktorClientRes = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktorSerialJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
serializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

[bundles]

[plugins]
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildKonfig" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ftpupload = { id = "de.nilsdruyen.gradle-ftp-upload-plugin", version.ref = "ftpUpload" }
gradleVersions = { id = "com.github.ben-manes.versions", version.ref = "gradleVersionsPlugin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "jetbrainsCompose" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }